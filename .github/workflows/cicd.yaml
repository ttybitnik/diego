name: ci/cd

on:
  # workflow_dispatch:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  release-please:
    permissions:
      contents: write
      pull-requests: write
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release-please.outputs.release_created }}
    steps:
      - name: Run release-please-action
        uses: google-github-actions/release-please-action@v4
        id: release-please
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: .release-please-config.json
          manifest-file: .release-please-manifest.json

  golangci-lint_go-test:
    permissions:
      contents: read
      pull-requests: read
      checks: write
    runs-on: ubuntu-latest
    needs: release-please
    steps:
      - name: Run checkout
        uses: actions/checkout@v4
      - name: Run setup-go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
          cache: false
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v4
        with:
          version: latest
      - name: Run go test from Makefile
        run: |
          go test -cover ./internal/adapters/left/cli

  goreleaser:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    needs: [release-please, golangci-lint_go-test]
    if: needs.release-please.outputs.release_created
    steps:
      - name: Run checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Run git fetch --force --tags
        run: git fetch --force --tags
      - name: Run setup-go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'
      - name: Run goreleaser
        uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  codeql-analyze:
    permissions:
      security-events: write
    uses: ./.github/workflows/codeql.yaml
